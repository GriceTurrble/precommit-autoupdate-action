name: "Pre-commit autoupdate"
description: "Runs pre-commit autoupdate"
inputs:
  token:
    description: "The token that the action will use to create and update the pull request."
    default: ${{ github.token }}
  python_version:
    description: "Python version to use."
    type: string
    required: false
    default: "3.12"
  pre_commit_version:
    type: string
    description: "Pre-commit version to use."
    required: false
    default: "4.0.1"
  path_to_config:
    type: string
    description: "Relative path to the .pre-commit-config.yaml file"
    required: false
    default: ".pre-commit-config.yaml"
  pr_title:
    type: string
    description: "Title of the PR to create."
    required: false
    default: "pre-commit autoupdate"
  pr_branch_name:
    type: string
    description: "Name of the branch to create with the update PR."
    required: false
    default: "ci/pre-commit-autoupdate"
  create_as_draft:
    type: boolean
    description: "Whether to open the update PR in draft mode"
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: "Set temp filename for PR body"
      run: echo "TEMP_FILENAME=temp-pr-body-${{ github.run_id }}-${{ github.run_attempt }}.md" >> $GITHUB_ENV
      shell: bash

    - name: "Setup Python"
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}

    - name: "Install pre-commit"
      run: python -m pip install pre-commit==${{ inputs.pre_commit_version }}
      shell: bash

    - name: "Run pre-commit autoupdate"
      id: autoupdate-run
      run: |
        UPDATE_OUTPUT=$(pre-commit autoupdate)
        echo "$UPDATE_OUTPUT" \
          | sed -rn 's|^(.*updating.*)$|* \1|p' \
          | sed -rn 's|^\* \[(https://github.com/(.*))\] (.*)|* [\2](\1) - \3|p' \
          > ${{ env.TEMP_FILENAME }}
      shell: bash

    - name: "Create PR for updates"
      id: create-pr
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.token }}
        branch: ${{ inputs.pr_branch_name }}
        title: ${{ inputs.pr_title }}
        # Use the body of our temp file for the body of the PR
        body-path: ${{ env.TEMP_FILENAME }}
        # start in draft, so that I can manually un-draft it,
        # in order to trigger CI runs
        # See: https://github.com/peter-evans/create-pull-request/issues/48
        draft: ${{ inputs.create_as_draft }}
        # Only interested in updates to pre-commit config
        add-paths: |
          ${{ inputs.path_to_config }}

    - name: "PR created"
      if: ${{ steps.create-pr.outputs.pull-request-number }}
      run: |
        ACTION="${{ steps.create-pr.outputs.pull-request-operation }}"
        PR_NUMBER="${{ steps.create-pr.outputs.pull-request-number }}"
        PR_URL="${{ steps.create-pr.outputs.pull-request-url }}"
        echo "PR ${ACTION}: [#${PR_NUMBER}](${PR_URL})" >> $GITHUB_STEP_SUMMARY
      shell: bash
